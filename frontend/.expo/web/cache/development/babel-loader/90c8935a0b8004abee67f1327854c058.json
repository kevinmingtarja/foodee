{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Radian\\\\Documents\\\\Code\\\\foodee\\\\frontend\\\\src\\\\screens\\\\OnboardingMain.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Box } from \"../components/Components\";\nimport Onboarding1 from \"./Onboarding1\";\nimport Onboarding2 from \"./Onboarding2\";\nimport Onboarding3 from \"./Onboarding3\";\nimport Pagination from \"../components/Pagination\";\nexport default function OnboardingMain(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    currentPage: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderState = _useState2[0],\n      setSliderState = _useState2[1];\n\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  var scrollRef = useRef(null);\n\n  var onPressNext = function onPressNext(initialX) {\n    if (initialX < width * 2) {\n      if (scrollRef && scrollRef.current) {\n        scrollRef.current.scrollTo({\n          x: initialX + width,\n          animated: true\n        });\n      }\n    }\n  };\n\n  var onGetStarted = function onGetStarted() {\n    navigation.navigate(\"Login\");\n  };\n\n  var setSliderPage = function setSliderPage(_ref2) {\n    var x = _ref2.x;\n    var currentPage = sliderState.currentPage;\n    var indexOfNextScreen = Math.floor(x / width);\n\n    if (indexOfNextScreen !== currentPage) {\n      setSliderState(_objectSpread(_objectSpread({}, sliderState), {}, {\n        currentPage: indexOfNextScreen\n      }));\n    }\n  };\n\n  var pageIndex = sliderState.currentPage;\n  return React.createElement(Box, {\n    style: {\n      flex: 1\n    },\n    backgroundColor: \"foreground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    ref: scrollRef,\n    style: {\n      flex: 1\n    },\n    horizontal: true,\n    scrollEventThrottle: 16,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    onScroll: function onScroll(event) {\n      setSliderPage(event.nativeEvent.contentOffset);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(Onboarding1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), React.createElement(Onboarding2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(Onboarding3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), pageIndex >= 2 ? React.createElement(View, {\n    style: {\n      paddingBottom: 90\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: {\n      marginLeft: 50\n    },\n    onPress: function onPress() {\n      return onGetStarted();\n    },\n    size: \"large\",\n    type: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Get Started\")) : React.createElement(View, {\n    style: styles.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, React.createElement(Pagination, {\n    pageIndex: pageIndex,\n    numOfPages: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    style: {\n      marginLeft: 50\n    },\n    onPress: function onPress() {\n      return onPressNext(width * pageIndex);\n    },\n    size: \"small\",\n    type: \"filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Next\")));\n}\nvar styles = StyleSheet.create({\n  wrapper: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: 30\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  paragraph: {\n    fontSize: 17\n  },\n  bottom: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingBottom: 90\n  }\n});","map":{"version":3,"sources":["C:/Users/Radian/Documents/Code/foodee/frontend/src/screens/OnboardingMain.tsx"],"names":["React","useState","useRef","Button","Box","Onboarding1","Onboarding2","Onboarding3","Pagination","OnboardingMain","navigation","currentPage","sliderState","setSliderState","Dimensions","get","width","height","scrollRef","onPressNext","initialX","current","scrollTo","x","animated","onGetStarted","navigate","setSliderPage","indexOfNextScreen","Math","floor","pageIndex","flex","event","nativeEvent","contentOffset","paddingBottom","marginLeft","styles","bottom","StyleSheet","create","wrapper","justifyContent","alignItems","marginVertical","header","fontSize","fontWeight","marginBottom","paragraph","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    SafeAreaView,\r\n    ScrollView,\r\n    Dimensions,\r\n    TouchableOpacity,\r\n    Touchable,\r\n} from \"react-native\";\r\nimport { Button, Box } from \"../components/Components\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RootNavigatorParamList } from \"../navigation/RootNavigator\";\r\n\r\nimport Onboarding1 from \"./Onboarding1\";\r\nimport Onboarding2 from \"./Onboarding2\";\r\nimport Onboarding3 from \"./Onboarding3\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\ntype LandingScreenNavigationProp = StackNavigationProp<\r\n    RootNavigatorParamList,\r\n    \"Onboarding\"\r\n>;\r\n\r\ninterface Props {\r\n    navigation: LandingScreenNavigationProp;\r\n}\r\n\r\nexport default function OnboardingMain({ navigation }: Props): JSX.Element {\r\n    const [sliderState, setSliderState] = useState({ currentPage: 0 });\r\n    const { width, height } = Dimensions.get(\"window\");\r\n    const scrollRef = useRef<ScrollView>(null);\r\n\r\n    const onPressNext = (initialX: number) => {\r\n        if (initialX < width * 2) {\r\n            // Strict null checks Typescript\r\n            if (scrollRef && scrollRef.current) {\r\n                scrollRef.current.scrollTo({\r\n                    x: initialX + width,\r\n                    animated: true,\r\n                });\r\n            }\r\n        }\r\n\r\n        // navigation.navigate(\"Last\");\r\n    };\r\n\r\n    const onGetStarted = () => {\r\n        navigation.navigate(\"Login\");\r\n        // navigation.reset({\r\n        //     index: 0,\r\n        //     routes: [{ name: \"Profile\" }],\r\n        // });\r\n    };\r\n\r\n    const setSliderPage = ({ x }: { x: number }) => {\r\n        const { currentPage } = sliderState;\r\n        const indexOfNextScreen = Math.floor(x / width);\r\n        if (indexOfNextScreen !== currentPage) {\r\n            setSliderState({\r\n                ...sliderState,\r\n                currentPage: indexOfNextScreen,\r\n            });\r\n        }\r\n    };\r\n\r\n    const { currentPage: pageIndex } = sliderState;\r\n\r\n    return (\r\n        <Box style={{ flex: 1 }} backgroundColor=\"foreground\">\r\n            <ScrollView\r\n                ref={scrollRef}\r\n                style={{ flex: 1 }}\r\n                horizontal={true}\r\n                scrollEventThrottle={16}\r\n                pagingEnabled={true}\r\n                showsHorizontalScrollIndicator={false}\r\n                onScroll={(event) => {\r\n                    setSliderPage(event.nativeEvent.contentOffset);\r\n                }}\r\n            >\r\n                <Onboarding1 />\r\n                <Onboarding2 />\r\n                <Onboarding3 />\r\n            </ScrollView>\r\n            {pageIndex >= 2 ? (\r\n                <View style={{ paddingBottom: 90 }}>\r\n                    <Button\r\n                        style={{ marginLeft: 50 }}\r\n                        onPress={() => onGetStarted()}\r\n                        size=\"large\"\r\n                        type=\"filled\"\r\n                    >\r\n                        Get Started\r\n                    </Button>\r\n                </View>\r\n            ) : (\r\n                <View style={styles.bottom}>\r\n                    <Pagination pageIndex={pageIndex} numOfPages={3} />\r\n                    <Button\r\n                        style={{ marginLeft: 50 }}\r\n                        onPress={() => onPressNext(width * pageIndex)}\r\n                        size=\"small\"\r\n                        type=\"filled\"\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </View>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginVertical: 30,\r\n    },\r\n    header: {\r\n        fontSize: 30,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 20,\r\n    },\r\n    paragraph: {\r\n        fontSize: 17,\r\n    },\r\n    bottom: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        paddingBottom: 90,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}