{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Radian\\\\Documents\\\\Code\\\\foodee\\\\frontend\\\\src\\\\components\\\\Typography\\\\index.tsx\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Color } from \"../Color\";\nimport styles from \"./styles\";\nexport var Heading = function Heading(props) {\n  var centered = props.centered,\n      children = props.children,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'ink' : _props$color,\n      _props$level = props.level,\n      level = _props$level === void 0 ? 1 : _props$level,\n      onLayout = props.onLayout,\n      style = props.style;\n  var headingStyle = [centered && styles.centered, level === 1 && styles.h1, level === 2 && styles.h2, level === 3 && styles.h3, {\n    color: Color[color]\n  }, style];\n  return React.createElement(Text, {\n    onLayout: onLayout,\n    style: headingStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport var BodyText = function BodyText(props) {\n  var centered = props.centered,\n      children = props.children,\n      _props$color2 = props.color,\n      color = _props$color2 === void 0 ? 'ash800' : _props$color2,\n      style = props.style,\n      weight = props.weight,\n      onPress = props.onPress;\n  var bodyTextStyle = [styles.body, centered && styles.centered, weight === 'semibold' && styles.bodySemibold, weight === 'bold' && styles.bodyBold, {\n    color: Color[color]\n  }, style];\n  return React.createElement(Text, {\n    style: bodyTextStyle,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/Radian/Documents/Code/foodee/frontend/src/components/Typography/index.tsx"],"names":["React","Color","styles","Heading","props","centered","children","color","level","onLayout","style","headingStyle","h1","h2","h3","BodyText","weight","onPress","bodyTextStyle","body","bodySemibold","bodyBold"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,KAAT;AAEA,OAAOC,MAAP;AAcA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAyB;AAC9C,MACEC,QADF,GAOID,KAPJ,CACEC,QADF;AAAA,MAEEC,QAFF,GAOIF,KAPJ,CAEEE,QAFF;AAAA,qBAOIF,KAPJ,CAGEG,KAHF;AAAA,MAGEA,KAHF,6BAGU,KAHV;AAAA,qBAOIH,KAPJ,CAIEI,KAJF;AAAA,MAIEA,KAJF,6BAIU,CAJV;AAAA,MAKEC,QALF,GAOIL,KAPJ,CAKEK,QALF;AAAA,MAMEC,KANF,GAOIN,KAPJ,CAMEM,KANF;AAQA,MAAMC,YAAY,GAAG,CACnBN,QAAQ,IAAIH,MAAM,CAACG,QADA,EAEnBG,KAAK,KAAK,CAAV,IAAeN,MAAM,CAACU,EAFH,EAGnBJ,KAAK,KAAK,CAAV,IAAeN,MAAM,CAACW,EAHH,EAInBL,KAAK,KAAK,CAAV,IAAeN,MAAM,CAACY,EAJH,EAKnB;AAAEP,IAAAA,KAAK,EAAEN,KAAK,CAACM,KAAD;AAAd,GALmB,EAMnBG,KANmB,CAArB;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,QAAhB;AAA0B,IAAA,KAAK,EAAEE,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD,CAtBM;AA6BP,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACX,KAAD,EAA0B;AAChD,MAAQC,QAAR,GAAyED,KAAzE,CAAQC,QAAR;AAAA,MAAkBC,QAAlB,GAAyEF,KAAzE,CAAkBE,QAAlB;AAAA,sBAAyEF,KAAzE,CAA4BG,KAA5B;AAAA,MAA4BA,KAA5B,8BAAoC,QAApC;AAAA,MAA8CG,KAA9C,GAAyEN,KAAzE,CAA8CM,KAA9C;AAAA,MAAqDM,MAArD,GAAyEZ,KAAzE,CAAqDY,MAArD;AAAA,MAA6DC,OAA7D,GAAyEb,KAAzE,CAA6Da,OAA7D;AACA,MAAMC,aAAa,GAAG,CACpBhB,MAAM,CAACiB,IADa,EAEpBd,QAAQ,IAAIH,MAAM,CAACG,QAFC,EAGpBW,MAAM,KAAK,UAAX,IAAyBd,MAAM,CAACkB,YAHZ,EAIpBJ,MAAM,KAAK,MAAX,IAAqBd,MAAM,CAACmB,QAJR,EAKpB;AAAEd,IAAAA,KAAK,EAAEN,KAAK,CAACM,KAAD;AAAd,GALoB,EAMpBG,KANoB,CAAtB;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,aAAb;AAA4B,IAAA,OAAO,EAAED,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QADH,CADF;AAKD,CAfM","sourcesContent":["import React from 'react'\r\nimport { Text, LayoutChangeEvent } from 'react-native'\r\n\r\nimport { Color, ColorName } from '../Color'\r\n\r\nimport styles from './styles'\r\n\r\nexport type BaseTypographyProps = {\r\n  centered?: boolean\r\n  children?: React.ReactNode\r\n  color?: ColorName\r\n  style?: TextStyleProp\r\n}\r\n\r\nexport type HeadingProps = BaseTypographyProps & {\r\n  level?: 1 | 2 | 3\r\n  onLayout?: (e: LayoutChangeEvent) => void\r\n}\r\n\r\nexport const Heading = (props: HeadingProps) => {\r\n  const {\r\n    centered,\r\n    children,\r\n    color = 'ink',\r\n    level = 1,\r\n    onLayout,\r\n    style,\r\n  } = props\r\n  const headingStyle = [\r\n    centered && styles.centered,\r\n    level === 1 && styles.h1,\r\n    level === 2 && styles.h2,\r\n    level === 3 && styles.h3,\r\n    { color: Color[color] },\r\n    style,\r\n  ]\r\n  return (\r\n    <Text onLayout={onLayout} style={headingStyle}>\r\n      {children}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport type BodyTextProps = BaseTypographyProps & {\r\n  weight?: 'semibold' | 'bold'\r\n  onPress?: () => void\r\n}\r\n\r\nexport const BodyText = (props: BodyTextProps) => {\r\n  const { centered, children, color = 'ash800', style, weight, onPress } = props\r\n  const bodyTextStyle = [\r\n    styles.body,\r\n    centered && styles.centered,\r\n    weight === 'semibold' && styles.bodySemibold,\r\n    weight === 'bold' && styles.bodyBold,\r\n    { color: Color[color] },\r\n    style,\r\n  ]\r\n  return (\r\n    <Text style={bodyTextStyle} onPress={onPress}>\r\n      {children}\r\n    </Text>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}