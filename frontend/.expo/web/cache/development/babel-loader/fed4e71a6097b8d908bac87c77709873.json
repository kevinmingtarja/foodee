{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Radian\\\\Documents\\\\Code\\\\foodee\\\\frontend\\\\src\\\\components\\\\Input\\\\index.tsx\";\n\nimport React, { forwardRef, useCallback, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { BodyText } from \"../Typography\";\nimport { Color } from \"../Color\";\nimport { Icon } from \"../Icon\";\nimport { composeStyles } from \"../../utils/composeStyles\";\nimport styles from \"./styles\";\nexport var Input = forwardRef(function (props, ref) {\n  var disabled = props.disabled,\n      errorMessage = props.errorMessage,\n      helperText = props.helperText,\n      label = props.label,\n      prefix = props.prefix,\n      showCheckmark = props.showCheckmark,\n      style = props.style,\n      onBlur = props.onBlur,\n      textInputProps = _objectWithoutProperties(props, [\"disabled\", \"errorMessage\", \"helperText\", \"label\", \"prefix\", \"showCheckmark\", \"style\", \"onBlur\"]);\n\n  var _useState = useState(!props.secureTextEntry),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var toggleVisible = useCallback(function () {\n    return setVisible(function (v) {\n      return !v;\n    });\n  }, []);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n\n  var handleFocus = useCallback(function () {\n    return setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    onBlur == null ? void 0 : onBlur(e);\n    setFocused(false);\n  }, [onBlur]);\n  var hasError = Boolean(errorMessage);\n  return React.createElement(View, {\n    style: composeStyles(styles.container, style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, Boolean(label) && React.createElement(BodyText, {\n    weight: \"semibold\",\n    color: hasError ? \"vermilion600\" : \"ash800\",\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, label), React.createElement(View, {\n    style: [styles.inputContainer, hasError && styles.inputContainerError, focused && styles.inputContainerFocused],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, Boolean(prefix) && React.createElement(View, {\n    style: styles.prefix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, React.createElement(BodyText, {\n    weight: \"semibold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, prefix)), React.createElement(TextInput, _extends({}, textInputProps, {\n    editable: !disabled,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    placeholderTextColor: Color.ash500,\n    secureTextEntry: !visible,\n    style: styles.input,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), showCheckmark && React.createElement(Icon, {\n    color: \"forest600\",\n    name: \"checkmark\",\n    size: 18,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), props.secureTextEntry && React.createElement(Icon, {\n    name: visible ? \"eye-outline\" : \"eye-off-outline\",\n    onPress: toggleVisible,\n    color: visible ? \"cerulean\" : \"ash500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })), hasError && React.createElement(BodyText, {\n    color: \"vermilion600\",\n    weight: \"bold\",\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, errorMessage), helperText && React.createElement(BodyText, {\n    color: \"cerulean\",\n    style: styles.helper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, helperText));\n});","map":{"version":3,"sources":["C:/Users/Radian/Documents/Code/foodee/frontend/src/components/Input/index.tsx"],"names":["React","forwardRef","useCallback","useState","BodyText","Color","Icon","composeStyles","styles","Input","props","ref","disabled","errorMessage","helperText","label","prefix","showCheckmark","style","onBlur","textInputProps","secureTextEntry","visible","setVisible","toggleVisible","v","focused","setFocused","handleFocus","handleBlur","e","hasError","Boolean","container","inputContainer","inputContainerError","inputContainerFocused","ash500","input","error","helper"],"mappings":"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","sourcesContent":["import React, { forwardRef, useCallback, useState } from \"react\";\r\nimport {\r\n    View,\r\n    TextInput,\r\n    TextInputProps,\r\n    NativeSyntheticEvent,\r\n    TextInputFocusEventData,\r\n    ViewStyle,\r\n} from \"react-native\";\r\n\r\nimport { BodyText } from \"../Typography\";\r\nimport { Color } from \"../Color\";\r\nimport { Icon } from \"../Icon\";\r\n\r\nimport { composeStyles } from \"@utils/composeStyles\";\r\nimport styles from \"./styles\";\r\n\r\ntype Props = Omit<\r\n    TextInputProps,\r\n    \"editable\" | \"onFocus\" | \"placeholderTextColor\"\r\n>;\r\n\r\nexport type InputProps = Props & {\r\n    disabled?: boolean;\r\n    errorMessage?: string;\r\n    helperText?: string;\r\n    label?: string;\r\n    prefix?: string;\r\n    showCheckmark?: boolean;\r\n    style?: ViewStyle;\r\n};\r\n\r\nexport const Input = forwardRef<TextInput, InputProps>((props, ref) => {\r\n    const {\r\n        disabled,\r\n        errorMessage,\r\n        helperText,\r\n        label,\r\n        prefix,\r\n        showCheckmark,\r\n        style,\r\n        onBlur,\r\n        ...textInputProps\r\n    } = props;\r\n\r\n    const [visible, setVisible] = useState(!props.secureTextEntry);\r\n    const toggleVisible = useCallback(() => setVisible((v) => !v), []);\r\n\r\n    const [focused, setFocused] = useState(false);\r\n    const handleFocus = useCallback(() => setFocused(true), []);\r\n    const handleBlur = useCallback(\r\n        (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\r\n            onBlur?.(e);\r\n            setFocused(false);\r\n        },\r\n        [onBlur]\r\n    );\r\n\r\n    const hasError = Boolean(errorMessage);\r\n\r\n    return (\r\n        <View style={composeStyles(styles.container, style)}>\r\n            {Boolean(label) && (\r\n                <BodyText\r\n                    weight=\"semibold\"\r\n                    color={hasError ? \"vermilion600\" : \"ash800\"}\r\n                    style={styles.label}\r\n                >\r\n                    {label}\r\n                </BodyText>\r\n            )}\r\n            <View\r\n                style={[\r\n                    styles.inputContainer,\r\n                    hasError && styles.inputContainerError,\r\n                    focused && styles.inputContainerFocused,\r\n                ]}\r\n            >\r\n                {Boolean(prefix) && (\r\n                    <View style={styles.prefix}>\r\n                        <BodyText weight=\"semibold\">{prefix}</BodyText>\r\n                    </View>\r\n                )}\r\n                <TextInput\r\n                    {...textInputProps}\r\n                    editable={!disabled}\r\n                    onBlur={handleBlur}\r\n                    onFocus={handleFocus}\r\n                    placeholderTextColor={Color.ash500}\r\n                    secureTextEntry={!visible}\r\n                    style={styles.input}\r\n                    ref={ref}\r\n                />\r\n                {showCheckmark && (\r\n                    <Icon color=\"forest600\" name=\"checkmark\" size={18} />\r\n                )}\r\n                {props.secureTextEntry && (\r\n                    <Icon\r\n                        name={visible ? \"eye-outline\" : \"eye-off-outline\"}\r\n                        onPress={toggleVisible}\r\n                        color={visible ? \"cerulean\" : \"ash500\"}\r\n                    />\r\n                )}\r\n            </View>\r\n            {hasError && (\r\n                <BodyText\r\n                    color=\"vermilion600\"\r\n                    weight=\"bold\"\r\n                    style={styles.error}\r\n                >\r\n                    {errorMessage}\r\n                </BodyText>\r\n            )}\r\n            {helperText && (\r\n                <BodyText color=\"cerulean\" style={styles.helper}>\r\n                    {helperText}\r\n                </BodyText>\r\n            )}\r\n        </View>\r\n    );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}